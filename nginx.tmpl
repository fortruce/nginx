gzip_types text/plain text/css application/javascript application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

log_format vhost '$host $remote_addr - $remote_user [$time_local] '
                 '"$request" $status $body_bytes_sent '
                 '"$http_referer" "$http_user_agent"';

access_log /proc/self/fd/1 vhost;
error_log /proc/self/fd/2;

server {
	listen 80 default_server;
	server_name _; # This is just an invalid value which will never trigger on a real hostname.
	return 503;
}

{{ range $host, $containers := groupByMulti $ "Env.VIRTUAL_HOST" "," }}

    upstream {{ $host }} {
    {{ range $container := $containers }}
            {{ $addrLen := len $container.Addresses }}
            {{/* If only 1 port exposed, use that */}}
            {{ if eq $addrLen 1 }}
                    {{ with $address := index $container.Addresses 0 }}
                       # {{$container.Name}}
                       server {{ $address.IP }}:{{ $address.Port }};
                    {{ end }}
            {{/* If more than one port exposed, use the one matching VIRTUAL_PORT env var */}}
            {{ else if $container.Env.VIRTUAL_PORT }}
                    {{ range $address := .Addresses }}
                       {{ if eq $address.Port $container.Env.VIRTUAL_PORT }}
                       # {{$container.Name}}
                       server {{ $address.IP }}:{{ $address.Port }};
                       {{ end }}
                    {{ end }}
            {{/* Else default to standard web port 80 */}}
            {{ else }}
                    {{ range $address := $container.Addresses }}
                            {{ if eq $address.Port "80" }}
                            # {{$container.Name}}
                            server {{ $address.IP }}:{{ $address.Port }};
                            {{ end }}
                    {{ end }}
            {{ end }}
    {{ end }}
    }

    server {
            server_name {{ $host }};

            location / {
                    proxy_pass {{ $proto }}://{{ $host }};
            }
    }

{{ end }}